/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Controllers;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import UI.xUIAdmin;
import ProgramCodes.Admin;
import ProgramCodes.Employee;
import ProgramCodes.ErrorHandler;
import ProgramCodes.Faculty;
import ProgramCodes.Student;
import databaseCodes.AdminDAO;
import databaseCodes.SectionDAO;
import databaseCodes.EmployeeDAO;
import databaseCodes.subjectDAO;
import databaseCodes.StudentDAO;
import javax.swing.JOptionPane;

/**
 *
 * @author Jan
 */
public class AdminController {
    private Admin model;
    private xUIAdmin view;
    private ErrorHandler errH;
    private AdminDAO aDAO;
    private SectionDAO seDAO;
    private EmployeeDAO eDAO;
    private subjectDAO suDAO;
    private StudentDAO sDAO;
    
    public AdminController(xUIAdmin theView , Admin theModel){
        model = theModel;
        view = theView;
        aDAO = new AdminDAO();
        eDAO = new EmployeeDAO();
        seDAO = new SectionDAO();
        suDAO = new subjectDAO();
        sDAO = new StudentDAO();
        errH = new ErrorHandler();
        this.view.addAddButtonListener(new addButtonListener());
        this.view.addAddButton1Listener(new addButton1Listener());
        this.view.addAddButton2Listener(new addButton2Listener());
        this.view.addAssignButtonListener(new addAssignButtonListener());
        this.view.addAssignButton1Listener(new addAssign1ButtonListener());
        this.view.addAssignButton2Listener(new addAssign2ButtonListener());
        this.view.addGradeLevelComboBox2Listener(new gradeLevelComboBox2Listener());
        this.view.addGradeLevelComboBox3Listener(new gradeLevelComboBox3Listener());
        this.view.addGradeLevelComboBox7Listener(new gradeLevelComboBox7Listener());
        this.view.addIDNumberComboBoxListener(new idNumberComboBoxListener());
        this.view.addASButtonListener(new ASButtonListener());
        this.view.addCDButtonListener(new CDButtonListener());
        this.view.addPDButtonListener(new PDButtonListener());
        this.view.addSYSettingsButtonListener(new SYButtonListener());
        this.view.addStudentButtonListener(new studentButtonListener());
        this.view.addAddFacultyButtonListener(new EmployeeButtonListener());
        this.view.addEditStudentButtonListener(new editStudentButtonListener());
        this.view.addEditFacultyButtonListener(new editFacultyButtonListener());
        this.view.addAddSectionButtonListener(new addSectionButtonListener());
        this.view.addAssignFacultyButtonListener(new addAssignFacultyButtonListener());
        this.view.addAssignStudentButtonListener(new addAssignStudentButtonListener());
        this.view.addAssignSubjectButtonListener(new addAssignSubjTeacherButtonListener());
        this.view.addEditAssignSubjectButtonListener(new addEditSubjTeacherButtonListener());
        this.view.addFacultyPositionComboBoxListener(new addFacultyPositionComboBoxListener());
        this.view.addQuarterSettingsButtonListener(new addQuarterSettingsButtonListener());
        this.view.addCurrentSettingsButtonListener(new addCurrentSettingsButtonListener());
        this.view.addSaveChangesButtonListener(new saveChangesbutton());
        this.view.addSaveChangesButton1Listener(new saveChangesbutton1Listener());
        this.view.addSaveButton1ActionListener(new addSaveButton1Listener());
        this.view.addGradeLevelComboBoxListener(new gradeLevelComboBoxListener());
        this.view.addAssignButton3Listener(new addAssignButton3Listener());
    }
    /****BUTTONS****/    
    class addButtonListener implements ActionListener{
        //@Override
        Student x;
        boolean go = false;
        @Override
        public void actionPerformed(ActionEvent e){
            x = new Student();
            if(errH.sCheckSpace(view.getStudentID()) && errH.sLength(view.getStudentID(), 5, 20)){
                x.setIdNum(view.getStudentID());
                if(errH.sCheckNames(view.getStudentFirstName())){
                    x.setFirstName(view.getStudentFirstName());
                    if(errH.sCheckNames(view.getStudentLastName())){
                        x.setLastName(view.getStudentLastName());
                        if(errH.sCheckNames(view.getStudentMidName())){
                            x.setMidName(view.getStudentMidName());
                            x.setGradeLvl(view.getStudentGradeLevel());
                            x.setGender(view.getStudentGender());  
                            x.setDOB(view.getStudentDOB());
                            if(aDAO.addStudent(x))
                                JOptionPane.showMessageDialog(view.getRootPane(), "Employee Successfuly Added.");
                            else
                                JOptionPane.showMessageDialog(view.getRootPane(), "ID Number or Name already exists.");
                        }
                        else
                            JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Middle Name.");
                    }
                    else
                        JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Last Name.");
                }
                else
                    JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered First Name.");
            }
            else
                JOptionPane.showMessageDialog(view.getRootPane(), "Error in ID Number.");
        }
    }
    class addButton1Listener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            Employee x = new Faculty();
            boolean go = false;
            if(errH.sCheckSpace(view.getEmployeeID()) && errH.sLength(view.getEmployeeID(), 5, 20)){
                x.setIdNum(view.getEmployeeID());
                if(errH.sCheckNames(view.getEmployeeFirstName())){
                    x.setFirstName(view.getEmployeeFirstName());
                    if(errH.sCheckNames(view.getEmployeeLastName())){
                        x.setLastName(view.getEmployeeLastName());
                        if(errH.sCheckNames(view.getEmployeeMidName())){
                            x.setMidName(view.getEmployeeMidName());
                            if(errH.sCheckCodes(view.getEmployeeContactNum(), 2) && errH.sCheckSpace(view.getEmployeeContactNum()) && errH.sLength(view.getEmployeeContactNum(), 11, 11)){ 
                                x.setContactNum(view.getEmployeeContactNum());
                                if(!view.getEmployeePosition().equals("Principal"))
                                    x.setDepartment(view.getEmployeeDepartment());
                                else
                                    x.setDepartment("None");
                                x.setGender(view.getEmployeeGender());
                                x.setPosition(view.getEmployeePosition());
                                if(eDAO.addEmployee(x))
                                    JOptionPane.showMessageDialog(view.getRootPane(), "Employee Successfuly Added.");                                
                                else
                                    JOptionPane.showMessageDialog(view.getRootPane(), "ID Number or Name already exists.");
                            }
                            else
                                JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Contact Number.");
                        }
                        else
                            JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Middle Name.");
                    }
                    else
                        JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Last Name.");
                }
                else
                    JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered First Name.");
            }
            else
                JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered ID Number.");
        }
    }
    class saveChangesbutton implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            Student s = new Student();
            if(errH.sCheckSpace(view.getNewStudentIDNum()) && errH.sLength(view.getNewStudentIDNum(), 5, 20)){
                s.setIdNum(view.getNewStudentIDNum());
                if(errH.sCheckNames(view.getNewStudentFirstName())){
                    s.setFirstName(view.getNewStudentFirstName());
                    if(errH.sCheckNames(view.getNewStudentLastName())){
                        s.setLastName(view.getNewStudentLastName());
                        if(errH.sCheckNames(view.getNewStudentMidName())){
                            s.setMidName(view.getNewStudentMidName());
                            s.setGradeLvl(view.getNewStudentGradeLevel());
                            s.setGender(view.getNewStudentGender());  
                            s.setDOB(view.getNewStudentDOB());
                            if(aDAO.editStudentInfo(s))
                                JOptionPane.showMessageDialog(view.getRootPane(), "Successfully edited student account.");
                            else
                                JOptionPane.showMessageDialog(view.getRootPane(), "Name already exists.");
                        }
                        else
                            JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Middle Name.");
                    }
                    else
                        JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Last Name.");
                }
                else
                    JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered First Name.");
            }
            else
                JOptionPane.showMessageDialog(view.getRootPane(), "Error in ID Number.");
        }   
    }
    class saveChangesbutton1Listener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            Employee x = new Faculty();
            boolean go = false;
            if(errH.sLength(view.getNewEmployeeID(), 5, 20) && errH.sCheckSpace(view.getNewEmployeeID())){
                x.setIdNum(view.getNewEmployeeID());
                if(errH.sCheckNames(view.getNewEmployeeFirstName())){
                    x.setFirstName(view.getNewEmployeeFirstName());
                    if(errH.sCheckNames(view.getNewEmployeeLastName())){
                        x.setLastName(view.getNewEmployeeLastName());
                        if(errH.sCheckNames(view.getNewEmployeeMidName())){
                            x.setMidName(view.getNewEmployeeMidName());
                            x.setGender(view.getNewEmployeeGender());
                            x.setPosition(view.getNewEmployeePosition());
                            if(!view.getEmployeePosition().equals("Principal"))
                                x.setDepartment(view.getNewEmployeeDepartment());
                            else
                                x.setDepartment("None");
                            if(aDAO.editEmployeeInfo(x))
                                JOptionPane.showMessageDialog(view.getRootPane(), "Successfully edited employee account.");
                            else
                                JOptionPane.showMessageDialog(view.getRootPane(), "Name already exists.");
                        }
                        else
                            JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Middle Name.");
                    }
                    else
                        JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Last Name.");
                }
                else
                    JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered First Name.");
            }
            else
                JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered ID Number.");
        }
    }
    class addButton2Listener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            if(errH.sCheckNames(view.getSectionName())){
                if(aDAO.addSection(view.getSectionGradeLevel(), view.getSectionName()))
                    JOptionPane.showMessageDialog(view.getRootPane(), "Section has been successfully added.");
                else
                    JOptionPane.showMessageDialog(view.getRootPane(), "Section Name already exists.");
            }
                else
                    JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Section Name.");
           }
    }
    class addAssignButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            int x;
            String y;
            x = seDAO.getSectionID(view.getSectionName1F(), view.getSectionGradeLevelF());
            y = eDAO.getAdviserID(view.getSectionAdviserIDF());
            if(aDAO.addAdviser(y, x))
                JOptionPane.showMessageDialog(view.getRootPane(), "Faculty successfully assigned as Class Adviser.");
            else
                JOptionPane.showMessageDialog(view.getRootPane(), "Class Already has an Adviser or Faculty is already an adviser in a class.");
        }
    }
    class addAssign1ButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            int x;
            String y;
            x = seDAO.getSectionID(view.getSectionName2S(), view.getSectionGradeLevelS());
            y = sDAO.getStudentID(view.getStudentNameS());
            if(aDAO.addToClass(y, x))
                JOptionPane.showMessageDialog(view.getRootPane(), "Student has been successfully assigned to the section.");
            else
                JOptionPane.showMessageDialog(view.getRootPane(), "Student is already assigned in a class.");
        }
    }
    class addAssign2ButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            int x, z;
            String y;
            x = seDAO.getSectionID(view.getSectionName3T(), view.getSectionGradeLevelT());
            y = eDAO.getAdviserID(view.getSubjTeacherNameT());
            z = suDAO.getSubjID(view.getSubjectNameT(), Integer.parseInt(view.getSectionGradeLevelT()));
            if(aDAO.addSubjTeacher(y, x, z))
                JOptionPane.showMessageDialog(view.getRootPane(), "Faculty has been successfully assigned to a class.");
            else
                JOptionPane.showMessageDialog(view.getRootPane(), "Teacher is already assigned in the same class for the same subject");
        }
    }
    class addSaveButton1Listener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            if(errH.sCheckCodes(view.getKnowledgePercentage(), 2) && errH.sCheckSpace(view.getKnowledgePercentage())){
                if(errH.sCheckCodes(view.getProcessPercentage(), 2) && errH.sCheckSpace(view.getProcessPercentage())){
                    if(errH.sCheckCodes(view.getUnderstandingPercentage(), 2) && errH.sCheckSpace(view.getUnderstandingPercentage())){
                        if(errH.sCheckCodes(view.getProductPercentage(), 2) && errH.sCheckSpace(view.getProductPercentage())){
                            aDAO.updateSettings(Integer.parseInt(view.getKnowledgePercentage()), "settingKnowledge");
                            aDAO.updateSettings(Integer.parseInt(view.getProcessPercentage()), "settingProcess");
                            aDAO.updateSettings(Integer.parseInt(view.getUnderstandingPercentage()), "settingUnderstanding");
                            aDAO.updateSettings(Integer.parseInt(view.getProductPercentage()), "settingProduct");
                            JOptionPane.showMessageDialog(view.getRootPane(), "Current Grade Settings had been changed.");
                        }
                        else
                            JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Product Percentage Value.");
                    }
                    else
                        JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Understanding Percentage Value.");
                }
                else
                    JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Process Percentage Value.");
            }
            else
                JOptionPane.showMessageDialog(view.getRootPane(), "Error in Entered Knowledge Percentage Value.");
        }
    }
    class addAssignButton3Listener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            int x, z;
            String y;
            x = seDAO.getSectionID(view.getSectionCombox(), view.getGLvl());
            y = eDAO.getAdviserID(view.getNewSubjTeacher());
            z = suDAO.getSubjID(view.getSubjectCombox(), view.getGradeLv());
            if(aDAO.editSubjTeacher(y, x, z))
                JOptionPane.showMessageDialog(view.getRootPane(), "Faculty has been successfully assigned to a class.");
            else
                JOptionPane.showMessageDialog(view.getRootPane(), "Teacher is already assigned in the same class for the same subject");
        }
    }
    /***COMBO BOX****/
    class gradeLevelComboBox2Listener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            view.setSectionComboBoxF(new javax.swing.DefaultComboBoxModel(seDAO.getSections(view.getGradeLevelF()).toArray()));
            view.setAdviserComboBoxF(new javax.swing.DefaultComboBoxModel(eDAO.getEmployee(view.getGradeLevelF()).toArray()));
        }
    }
    class gradeLevelComboBox3Listener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            view.setSectionComboBoxS(new javax.swing.DefaultComboBoxModel(seDAO.getSections(view.getGradeLevelS()).toArray()));
            view.setStudentComboBoxS(new javax.swing.DefaultComboBoxModel(sDAO.getStudents(view.getGradeLevelS()).toArray()));
        }
    }
    class gradeLevelComboBox7Listener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            view.setSectionComboBoxT(new javax.swing.DefaultComboBoxModel(seDAO.getSections(view.getGradeLevelT()).toArray()));
            view.setSubjectComboBoxT(new javax.swing.DefaultComboBoxModel(suDAO.getSubject(view.getGradeLevelT()).toArray()));
            view.setSubjectTeacherComboBoxT(new javax.swing.DefaultComboBoxModel(eDAO.getEmployee(view.getGradeLevelT()).toArray()));
        }
    }
    class gradeLevelComboBoxListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            view.setSectionCombox(new javax.swing.DefaultComboBoxModel(seDAO.getSections(view.getGradeLv()).toArray()));
            view.setSubjectCombox(new javax.swing.DefaultComboBoxModel(suDAO.getSubject(view.getGradeLv()).toArray()));
            view.setSubjectTeacherComboBox1(new javax.swing.DefaultComboBoxModel(eDAO.getEmployee(view.getGradeLv()).toArray()));
        }
    }
    class idNumberComboBoxListener implements ActionListener{
        Student s;
        @Override
        public void actionPerformed(ActionEvent e){
            view.setEditFirstnameTextField(view.getEditFirstName());
            view.setEditMidnameTextField(view.getEditMidName());
            view.setEditSurnameTextField(view.getEditLastName());
            view.setEditDay(view.getEditDay());
            view.setEditMonth(view.getEditMonth());
            view.setEditYear(view.getEditYear());
            view.setEditGender(view.getEditGender());
            view.setEditYearLevel(view.getEditYearLevel());
        }
    }
    class addFacultyPositionComboBoxListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            if(view.getFacultyPosition().equals("Principal")){
                view.setDeptLabel(false);
                view.setDeptCombox(false);
            }
            if(view.getFacultyPosition().equals("Principal")){
                view.setDeptLabel(true);
                view.setDeptCombox(true);
            }
        }
    }
    /****VIEW PANELS****/
    class PDButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
           revertWindow();
           view.setPDMenu();
        }
    }
    class CDButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            revertWindow();
            view.setCDMenu();
        }
    }
    class SYButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            revertWindow();
            view.setSYSMenu();
        }
    }
    class ASButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            revertWindow();
            view.setASMenu();
        }
    }
    class addEditSubjTeacherButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            revertWindow();
            view.setEditSubjTeachPanel();
        }
    }
    class addQuarterSettingsButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            revertWindow();
            view.setQSPanel();
        }
    }
    class addCurrentSettingsButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            revertWindow();
            view.setCSPanel();
        }
    }
    class addEditSectionButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            revertWindow();
            view.setEditSectPanel();
        }
    }
    class addSectionButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            revertWindow();
            view.setAddSecPanel();
        }
    } 
    class addAssignFacultyButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            revertWindow();
            view.setAssignFPanel();
        }
    } 
    class addAssignStudentButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            revertWindow();
            view.setAssignStPanel();
        }
    } 
    class addAssignSubjTeacherButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            revertWindow();
            view.setAssignSTPanel();
        }
    } 
    class studentButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            revertWindow();
            view.setAddStPanel();
        }
        
    }
    class EmployeeButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            revertWindow();
            view.setAddEmPanel();
        }
        
    }
    class editStudentButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            view.setIDNumberComboBox(new javax.swing.DefaultComboBoxModel(sDAO.getStudents().toArray()));
            revertWindow();
            view.setEditStPanel();
        }   
    }
    class editFacultyButtonListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e){
            view.setEmployeeIDComboBox(new javax.swing.DefaultComboBoxModel(eDAO.getFaculty().toArray()));
            revertWindow();
            view.setEditFPanel();
        }   
    }
    public void revertWindow(){
         view.revert();
    }
}
